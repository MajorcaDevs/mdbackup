pipeline {
  agent {
    docker {
      label 'docker'
      image 'python:3.7-buster'
      args '-e HOME=$WORKSPACE -e PATH=$PATH:$WORKSPACE/.local/bin'
    }
  }

  environment {
    CI = 'true'
  }

  stages {
    stage('Prepare') {
      steps {
        sh 'pip install --user -r docker/dev/requirements.dev.txt'
        sh 'pip install --user -r docker/requirements.txt'
      }
    }

    stage('Code Style') {
      steps {
        sh 'flake8 mdbackup'
        sh 'flake8 tests'
      }
    }

    stage('Test') {
      steps {
        script {
          sh 'coverage run --source=mdbackup --branch -m xmlrunner discover -s tests -p \'*tests*.py\' -o tests/.report'
          sh 'coverage xml -o coverage_report.xml'
          sh 'PYTHONPATH=$PWD python -m mdbackup --help'
        }
      }

      post {
        always {
          junit 'tests/.report/**/*.xml'
          cobertura coberturaReportFile: 'coverage_report.xml'
        }
      }
    }
  }
}
